/*
 * Piloto.c
 *
 *  Created on: 27 jun. 2021
 *      Author: luciano
 */

#include "Piloto.h"
#include <stdio.h>
#include <stdlib.h>
/**
 * \brief Constructor por defecto, reserva  memoria dinamica
 * \return Employee* en memoria dinamica
 */
ePiloto* piloto_new(){

	ePiloto* auxPiloto;

	auxPiloto = (ePiloto*) calloc (sizeof(ePiloto),1);

	return auxPiloto;
}

/**
 * \brief Constructor parametrizado, parsea los datos y los devuelve para aÃ±adirlos a la linked list
 * \param idStr ID leido del .csv
 * \param nombreStr Nombre leido del .csv
 * \param horasTrabajadasStr Horas leidas del .csv
 * \param sueldoStr Sueldo leido del .csv
 * \return Retorna el empleado parametrizado
 */
ePiloto* piloto_newParametros(char* idStr,char* nombreStr,char* horasTrabajadasStr, char* sueldoStr){
	ePiloto* auxPiloto;

	auxPiloto = piloto_new();

	if(auxPiloto != NULL){
		employee_setAllAtributes(newEmployee,atoi(idStr), nombreStr, atoi(horasTrabajadasStr), atoi(sueldoStr));
	}

	return newEmployee;
}

/**
 * \brief Elimina un empleado de la memoria dinamica
 * \param this
 */
void employee_delete(Employee* this){
	if(this != NULL){
		free(this);
	}
}

/**
 * \brief Setea el ID de mi elemento
 * \param this
 * \param id
 * \return 1 bien 0 NULL
 */

int employee_setId(Employee* this,int id){

	int rtn = 0;

	if(this != NULL && id > -1){
		this->id = id;
		rtn =  1;
	}

	return rtn;
}

/**
 * \brief Devuelve el id de mi elemento
 * \param this
 * \param id Direccion de memoria a setear el campo del elemento
 * \return 1 bien 0 NULL
 */
int employee_getId(Employee* this,int* id){

	int rtn = 0;

	if(this != NULL){
		*id = this->id;
		rtn = 1;
	}

	return rtn;
}

/**
 * \brief Setea el nombre de mi elemento
 * \param this
 * \param nombre
 * \return 1 bien 0 NULL
 */
int employee_setNombre(Employee* this,char* nombre){

	int rtn = 0;

	if(this != NULL && nombre != NULL){
		strcpy(this->nombre, nombre);
		rtn =  1;
	}

	return rtn;
}
/**
 * \brief Devuelve el nombre de mi elemento
 * \param this
 * \param nombre Direccion de memoria a setear el campo del elemento
 * \return 1 bien 0 NULL
 */
int employee_getNombre(Employee* this,char* nombre){

	int rtn = 0;

	if(this != NULL && nombre != NULL){
		strcpy(nombre, this->nombre);
		rtn = 1;
	}

	return rtn;

}

/**
 * \brief Setea las horas trabajadas de mi elemento
 * \param this
 * \param horasTrabajadas
 * \return 1 bien 0 NULL
 */
int employee_setHorasTrabajadas(Employee* this,int horasTrabajadas){

	int rtn = 0;

	if(this != NULL && horasTrabajadas > -1){
		this->horasTrabajadas = horasTrabajadas;
		rtn =  1;
	}

	return rtn;

}

/**
 * \brief Devuelve las horas trabajadas de mi elemento
 * \param this
 * \param horasTrabajadas Direccion de memoria a setear el campo del elemento
 * \return 1 bien 0 NULL
 */
int employee_getHorasTrabajadas(Employee* this,int* horasTrabajadas){

	int rtn = 0;

	if(this != NULL){
		*horasTrabajadas = this->horasTrabajadas;
		rtn = 1;
	}

	return rtn;
}

/**
 * \brief Setea el sueldo de mi elemento
 * \param this
 * \param sueldo
 * \return 1 bien 0 NULL
 */
int employee_setSueldo(Employee* this,int sueldo){

	int rtn;

	if(this != NULL && sueldo > -1){
		this->sueldo = sueldo;
		rtn = 1;
	}

	return rtn;

}
/**
 * \brief Devuelve el sueldo de mi elemento
 * \param this
 * \param sueldo Direccion de memoria a setear el campo del elemento
 * \return 1 bien 0 NULL
 */
int employee_getSueldo(Employee* this,int* sueldo){

	int rtn = 0;

	if(this != NULL){
		*sueldo = this->sueldo;
		rtn = 1;
	}

	return rtn;

}

/**
 * \brief Setea todos los campos de mi elemento
 * \param this
 * \param id
 * \param nombre
 * \param horasTrabajadas
 * \param sueldo
 * \return 1 bien 0 NULL
 */
int employee_setAllAtributes(Employee* this, int id, char* nombre, int horasTrabajadas, int sueldo){
	int rtn = 1;

	if(this != NULL && id > -1 && nombre != NULL && horasTrabajadas > -1 && sueldo > -1){

		if(employee_setId(this, id) == 0 && rtn == 1){
			rtn = 0;
		}
		if(employee_setNombre(this, nombre) == 0 && rtn == 1){
			rtn = 0;
		}
		if(employee_setHorasTrabajadas(this, horasTrabajadas) == 0 && rtn == 1){
			rtn = 0;
		}//int

		if(employee_setSueldo(this, sueldo) == 0 && rtn == 1){
			rtn = 0;
		}

	} else {

		rtn = 0;

	}

	return rtn;
}

/**
 * \brief Devuelve todos los campos mi elemento
 * \param this
 * \param id Direccion de memoria a setear el campo del elemento
 * \param nombre Direccion de memoria a setear el campo del elemento
 * \param horasTrabajadas Direccion de memoria a setear el campo del elemento
 * \param sueldo Direccion de memoria a setear el campo del elemento
 * \return 1 bien 0 NULL
 */
int piloto_getAllAtributes(ePiloto* this, int* id, char* nombre, char* apellido){

	int rtn = 1;

	if(this != NULL && id != NULL && nombre != NULL && apellido != NULL ){

		if(employee_getId(this, id) == 0 && rtn == 1){
			rtn = 0;
		}
		if(employee_getNombre(this, nombre) == 0 && rtn == 1){
			rtn = 0;
		}
		if(employee_getHorasTrabajadas(this, horasTrabajadas) == 0 && rtn == 1){
			rtn = 0;
		}

		if(employee_getSueldo(this, sueldo) == 0 && rtn == 1){
			rtn = 0;
		}

	} else {

		rtn = 0;

	}

	return rtn;

}
